name: appsyncmasterclass
schema: schema.api.graphql
authentication:
  type: AMAZON_COGNITO_USER_POOLS
  config:
    awsRegion: eu-west-1
    defaultAction: ALLOW
    userPoolId: !Ref CognitoUserPool
resolvers:
  Query.getMyProfile:
    dataSource: usersTable
    kind: UNIT
    code: "resolvers/getMyProfile.js"

  Query.getImageUploadUrl:
    dataSource: getImageUploadUrlFunction
    kind: UNIT

  Query.getTweets:
    dataSource: tweetsTable
    kind: UNIT
    code: "resolvers/getTweets.js"

  Query.getMyTimeline:
    dataSource: timelinesTable
    kind: UNIT
    code: "resolvers/getMyTimeline.js"

  Mutation.editMyProfile:
    dataSource: usersTable
    kind: UNIT
    code: "resolvers/editMyProfile.js"

  Mutation.tweet:
    dataSource: tweetFunction
    kind: UNIT

  Mutation.like:
    dataSource: likesSource
    kind: UNIT
    code: "resolvers/like.js"

  Mutation.unlike:
    dataSource: likesSource
    kind: UNIT
    code: "resolvers/unlike.js"

  ## nested fields:
  Tweet.profile:
    dataSource: usersTable
    kind: UNIT
    request: "mapping-templates/Tweet.profile.request.vtl"
    response: "mapping-templates/Tweet.profile.response.vtl"

  Tweet.liked:
    dataSource: likesTable
    kind: UNIT
    code: "resolvers/Tweet.liked.js"

  TimelinePage.tweets:
    dataSource: tweetsTable
    kind: UNIT
    code: "resolvers/TimelinePage.tweets.js"

dataSources:
  none:
    type: NONE

  usersTable:
    type: AMAZON_DYNAMODB
    config:
      tableName: !Ref UsersTable

  tweetsTable:
    type: AMAZON_DYNAMODB
    config:
      tableName: !Ref TweetsTable

  timelinesTable:
    type: AMAZON_DYNAMODB
    config:
      tableName: !Ref TimelinesTable

  likesTable:
    type: AMAZON_DYNAMODB
    config:
      tableName: !Ref LikesTable

  likesSource:
    type: AMAZON_DYNAMODB
    config:
      tableName: !Ref LikesTable
      iamRoleStatements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
          Resource: !GetAtt LikesTable.Arn
        - Effect: Allow
          Action:
            - dynamodb:UpdateItem
          Resource: !GetAtt UsersTable.Arn
        - Effect: Allow
          Action:
            - dynamodb:UpdateItem
          Resource: !GetAtt TweetsTable.Arn

  getImageUploadUrlFunction:
    type: AWS_LAMBDA
    config:
      functionName: getImageUploadUrl

  tweetFunction:
    type: AWS_LAMBDA
    config:
      functionName: tweet

substitutions:
  TweetsTable: !Ref TweetsTable
  UsersTable: !Ref UsersTable
  LikesTable: !Ref LikesTable
